* {
  padding: 0;
  margin: 0;
}

$font: 'Megrim', cursive;


@import "_header.scss";


body,html {
  height: 100vh;
  margin: 0 auto;
}

/*画像を固定する背景*/
header, section /*footer*/  {
  box-sizing: border-box;
  color: #FFF;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  padding: 5%;
}

main{
  .contents-topic{
    width: 40%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .slider{
    width: 51%;
  }
}


/*背景写真に対するCSS */
.parallax-bg {
  background-attachment: fixed;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

//background設定
@mixin backgroundImgs(){
  background-size: cover;
  height: 100vh;
  width: 100vw;
  background-attachment: fixed;
}

/*各背景の画像*/
.img-bg-0{
  &1{
    background-image: url('../img/top-page.jpg');
    @include backgroundImgs;
  }
  &2{
    background-image: url('../img/Tsavo\ East\ National\ Park\ Kenya\,\ Africa\,\ Kenya.jpg');
    @include backgroundImgs;
  }
  &3{
    background-image: url('../img/alexander-schimmeck-aY-mR749vMw-unsplash.jpg');
    @include backgroundImgs;
  }
  &4{
    background-image: url('../img/angelique-emonet-BCMHxt76Q34-unsplash.jpg');
    @include backgroundImgs;
  }
}

#africa,#asia,#europe {
  font-size: 100px;
  font-family: $font;
}


//SWIPER
.slider {/*横幅94%で左右に余白を持たせて中央寄せ*/
  width: 94%;
  margin:0 auto;
}

.slider img {
  width:80vw;/*スライダー内の画像を60vwにしてレスポンシブ化*/
  height:60vh;
}

.slider .slick-slide {
transform: scale(0.8);/*左右の画像のサイズを80%に*/
transition: all .5s;/*拡大や透過のアニメーションを0.5秒で行う*/
opacity: 0.5;/*透過50%*/
}

.slider .slick-slide.slick-center{
transform: scale(1);/*中央の画像のサイズだけ等倍に*/
opacity: 1;/*透過なし*/
}


/*矢印の設定*/

/*戻る、次へ矢印の位置*/
.slick-prev, 
.slick-next {
  position: absolute;/*絶対配置にする*/
  top: 42%;
  cursor: pointer;/*マウスカーソルを指マークに*/
  outline: none;/*クリックをしたら出てくる枠線を消す*/
  border-top: 2px solid #666;/*矢印の色*/
  border-right: 2px solid #666;/*矢印の色*/
  height: 15px;
  width: 15px;
}

.slick-prev {/*戻る矢印の位置と形状*/
  left: -1.5%;
  transform: rotate(-135deg);
}

.slick-next {/*次へ矢印の位置と形状*/
  right: -1.5%;
  transform: rotate(45deg);
}

/*ドットナビゲーションの設定*/

.slick-dots {
  text-align:center;
margin:20px 0 0 0;
}

.slick-dots li {
  display:inline-block;
margin:0 5px;
}

.slick-dots button {
  color: transparent;
  outline: none;
  width:8px;/*ドットボタンのサイズ*/
  height:8px;/*ドットボタンのサイズ*/
  display:block;
  border-radius:50%;
  background:#ccc;/*ドットボタンの色*/
}

.slick-dots .slick-active button{
  background:#333;/*ドットボタンの現在地表示の色*/
} 

/*コンタクト*/

#contact{
  background-image: url(../img/contact.jpg);
  background-size: cover;
  color: gray;
  height: 100vh;
  display: flex;
  align-items: center;
  flex-direction: column;
  h1{
    font-family: $font;
    font-size: 50px;
  }
    .contact-wrap{
      display: flex;
      align-items: center;
      flex-direction: column;
      margin-top: 20px;
    }
    input, textarea {
      width: 90%;
      font-size: 20px;
      margin-bottom: 20px;
      padding: 3px 12px;
      font-family: $font;
    }

    /*== 外の線が伸びる */
.btnlinestretches{
  /*線の基点とするためrelativeを指定*/
position:relative;
  /*ボタンの形状*/
color:#333;
border:1px solid #333;
  padding: 10px 30px;	
display:inline-block;
  text-decoration: none;
  outline: none;
  font-family: $font;
  /*アニメーションの指定*/
transition:all 0.3s ease-in-out;
}

/*hoverした際の背景の形状*/
.btnlinestretches:hover{
background:#333;
color: #fff;
border-color:transparent;
}

/*線の設定*/
.btnlinestretches::before,
.btnlinestretches::after {
content:'';
  /*絶対配置で線の位置を決める*/   
position:absolute;
border:solid #333;
width:10px;
height:10px;
  /*アニメーションの指定*/
transition:all 0.3s ease-in-out;
}

/*線の位置と形状*/
.btnlinestretches::before{
top:-6px;
left:-6px;
border-width:1px 0 0 1px;
}

/*線の位置と形状*/
.btnlinestretches::after{
bottom:-6px;
right:-6px;
border-width:0 1px 1px 0;
}

/*hoverした際の線の形状*/
.btnlinestretches:hover::before,
.btnlinestretches:hover::after{
width:calc(100% + 11px);
height:calc(100% + 11px);
border-color:#666;
}   
}



/*========= ページトップのためのCSS ===============*/
/*リンクを右下に固定*/
#page-top {
	position: fixed;
	right: 30px;
	bottom:30px;
	z-index: 2;
    /*はじめは非表示*/
	opacity: 0;
	transform: translateY(150px);
}

/*　上に上がる動き　*/
#page-top.UpMove{
	animation: UpAnime 0.5s forwards;
}

@keyframes UpAnime{
  from {
    opacity: 0;
	transform: translateY(150px);
  }
  to {
    opacity: 1;
	transform: translateY(0);
  }
}

/*　下に下がる動き　*/
#page-top.DownMove{
	animation: DownAnime 0.5s forwards;
}

@keyframes DownAnime{
  from {
  	opacity: 1;
	transform: translateY(0);
  }
  to {
  	opacity: 1;
	transform: translateY(150px);
  }
}

/*画像の切り替えと動き*/
#page-top a {
    /*aタグの形状*/
	display: block;
	width: 100px;
	height: 100px;
	color: #333;
	text-align: center;
	text-transform: uppercase; 
	text-decoration: none;
	font-size:15px;
  font-family: $font;
    /*背景画像の指定*/
	// background: url("../img/pagetop_1.png") no-repeat center;
	// background-size: contain;
}

#page-top.floatAnime a{
	width: 100px;
	height: 130px;
    /*背景画像の指定*/
	// background: url("../img/pagetop_2.png") no-repeat center;
	// background-size: contain;
    /*アニメーションの指定*/
	animation: floatAnime 2s linear infinite;
	opacity: 0;
}

@keyframes floatAnime {
  0% { transform: translateX(0); opacity: 0; }
  25% { transform: translateX(-6px);opacity: 1; }
  50% { transform: translateX(0) }
  100% { transform: translateX(6px);opacity: 1; }
}

/*Page Topと書かれたテキストの位置*/
#page-top span{
    position: absolute;
    bottom: -20px;
    right: 20px;
	color: #666;
}
/*検証のためのCSS*/
section{
padding: 500px 0;
}

@import "_footer.scss";


// @mixinの応用:メディアクエリ
$pc:1024px;
$sp:640px;
@mixin max-screen($break-point) {
    @media screen and (max-width: $break-point){
        @content;
    }
}
@mixin min-screen($break-point) {
    @media screen and (min-width: $break-point){
        @content;
    }
}
@mixin screen($min, $max) {
    @media screen and (min-width: $min) and (max-width: $max){
        @content;
    }
}

// 使用例
div{
    @include max-screen($sp){ //スマホサイズ
        width: 100%;// contentの中身
    }
    @include min-screen($pc){//　pcサイズ
        width: 50%;
    }
    @include screen($sp, $pc){ //　タブレットサイズ
        width: 75%;
    }
}